- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    gcp_region: us-east1
    gcp_zone: us-east1-b
    gcp_project: true-entropy-221110
    gcp_cred_kind: serviceaccount
    gcp_cred_file: ../credentials.json
    source_image: projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20181030
  roles:
    #create network
    - role: gcp-network

    #create monitor
    - role: gcp-instance
      vars:
        gcp_machine_type: n1-standard-1
        instances:
          - { index: 1, tag: monitor }
        disk_size: 10
        disk_type: pd-standard
        type: monitor
    
    #create database machines
    - role: gcp-instance
      vars:
        gcp_machine_type: f1-micro
        instances:
          - { index: 1, tag: db-primary }
          - { index: 2, tag: db-standby }
        disk_size: 10
        disk_type: pd-ssd
        type: db

    #create redis machines
    - role: gcp-instance
      vars:
        gcp_machine_type: f1-micro
        instances:
          - { index: 1, tag: redis-master }
          - { index: 2, tag: redis-slave }
          - { index: 3, tag: redis-slave }
        disk_size: 10
        disk_type: pd-ssd
        type: redis
    #create gitaly
    - role: gcp-instance
      vars:
        gcp_machine_type: n1-standard-1
        instances:
          - { index: 1, tag: gitaly }
          #- { index: 2, tag: gitaly }
        disk_size: 30
        disk_type: pd-standard
        type: gitaly
    #create app
    - role: gcp-instance
      vars:
        gcp_machine_type: n1-standard-1
        instances:
          - { index: 1, tag: app}
        disk_size: 30
        disk_type: pd-standard
        type: gitlab-app

- hosts: localhost
  gather_facts: no
  tasks:
    - name: Wait for instances to respond
      wait_for:
        host: "{{ item }}"
        port: 22
      loop: "{{ groups['all'] }}"

- hosts: all
  become: yes
  tasks:
    - name: Wait for updates to finish
      shell: while pgrep apt; do sleep 1; done;

- hosts: monitor
  become: yes
  roles: 
    - { role: monitor }

- hosts: db-*
  become: yes
  roles:
    - { 
      role: db-install,
      pg_version: '9.5',
      bucardo_version: '5.5.0',
      listen: '*', 
      pg_password: 'password',
      floating_ip: '10.10.10.10',
      zone: us-east1-b
      }
    - { role: beats, type: db }

- hosts: redis-master
  become: yes
  roles:
    - { role: redis, type: master }
    - { role: beats, type: redis }

- hosts: redis-slave
  become: yes
  roles:
    - { role: redis, type: slave }
    - { role: beats, type: redis }

- hosts: localhost
  tasks:
    - name: Copy config files
      shell: |
        cp gitlab.yml.example gitlab.yml
        cp resque.yml.example resque.yml
    - name: write gitaly default address to config file
      shell: |
        sed -i.bak '613i\
        \ \ \ \ \ \ default:
        ' gitlab.yml
        sed -i.bak '614i\
        \ \ \ \ \ \ \ \ path: /home/git/repositories
        ' gitlab.yml
        sed -i.bak '615i\
        \ \ \ \ \ \ \ \ gitaly_address: tcp://{{ hostvars[item].ansible_default_ipv4.address }}:8075
        ' gitlab.yml
      loop: "{{groups[\"gitaly\"]}}"
      loop_control:
        index_var: idx
      when: idx == 0
    - name: Write other gitaly adresses to config file
      shell: |
        sed -i.bak '616i\
        \ \ \ \ \ \ respository{{idx}}:
        ' gitlab.yml
        sed -i.bak '617i\
        \ \ \ \ \ \ \ \ path: /home/git/repositories{{idx}}
        ' gitlab.yml
        sed -i.bak '618i\
        \ \ \ \ \ \ \ \ gitaly_address: tcp://{{ hostvars[item].ansible_default_ipv4.address }}:8075
        ' gitlab.yml
      loop: "{{groups[\"gitaly\"]}}"
      loop_control:
        index_var: idx
      when: idx != 0
    - name: Write redis adresses to config file
      shell: |
        echo "    -" >> resque.yml
        echo "      host: {{ hostvars[item].ansible_default_ipv4.address }}" >> resque.yml
        echo "      port: 26379" >> resque.yml
      loop: "{{groups[\"redis-master\"]}}"
    - name: Write redis adresses to config file
      shell: |
        echo "    -" >> resque.yml
        echo "      host: {{ hostvars[item].ansible_default_ipv4.address }}" >> resque.yml
        echo "      port: 26379" >> resque.yml
      loop: "{{groups[\"redis-slave\"]}}"
- hosts: app
  become: yes
  tasks:
    - name: Copy gitlab.yml to gitlab-app instances
      copy:
        src: ./gitlab.yml
        dest: ~/gitlab.yml
    - name : Copy resque.yml to gitlab-app instances
      copy:
        src: ./resque.yml
        dest: ~/resque.yml
- hosts: gitaly
  become: yes
  roles:
    - { role: gitaly }
    - { role: beats, type: none }

- hosts: app
  become: yes
  roles:
    - { role: app }
    - { role: beats, type: app }