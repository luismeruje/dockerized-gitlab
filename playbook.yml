- hosts: localhost
  gather_facts: no
  vars:
    test: true
    gcp_region: us-east1
    gcp_zone: us-east1-b
    gcp_project: true-entropy-221110
    gcp_cred_kind: serviceaccount
    gcp_cred_file: ../credentials.json
    source_image: projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20181030
  roles:
    #create network
    - role: gcp-network

    #create monitor
    - role: gcp-instance
      vars:
        gcp_machine_type: n1-standard-2
        instances:
          - { index: 1, tag: monitor }
        disk_size: 50
        disk_type: pd-standard
        type: monitor
        external_ip: true

    #create database machines
    - role: gcp-instance
      vars:
        gcp_machine_type: n1-highcpu-2
        instances:
          - { index: 1, tag: db-primary }
          - { index: 2, tag: db-standby }
        disk_size: 100
        disk_type: pd-ssd
        type: db
        external_ip: false

    #create redis machines
    - role: gcp-instance
      vars:
        gcp_machine_type: n1-standard-1
        instances:
          - { index: 1, tag: redis-master }
          - { index: 2, tag: redis-slave }
          - { index: 3, tag: redis-slave }
        disk_size: 30
        disk_type: pd-standard
        type: redis
        external_ip: false

    #create gitaly
    - role: gcp-instance
      vars:
        gcp_machine_type: n1-standard-2
        instances:
          - { index: 1, tag: gitaly }
          - { index: 2, tag: gitaly }
        disk_size: 50
        disk_type: pd-ssd
        type: gitaly
        external_ip: false

    #create app
    - role: gcp-instance
      vars:
        gcp_machine_type: n1-standard-2
        instances:
          - { index: 1, tag: app}
          - { index: 2, tag: app}
          - { index: 3, tag: app}
        disk_size: 30
        disk_type: pd-standard
        type: gitlab-app
        external_ip: false

    #create test machine
    - role: gcp-instance
      vars:
        gcp_machine_type: n1-standard-2
        instances:
          - { index: 1, tag: tests }
        disk_size: 10
        disk_type: pd-standard
        type: tests
        external_ip: true
      when: test
      
      


- hosts: localhost
  gather_facts: no
  tasks:
    - name: Wait for instances to respond
      wait_for:
        host: "{{ item }}"
        port: 22
      loop: "{{ groups['all'] }}"


- hosts: all
  become: yes
  tasks:
    - name: Wait for updates to finish
      shell: while pgrep apt; do sleep 1; done;
    - name: Change ssh port on VM's
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^Port"
        line: "Port 2222"
    - name: Restart ssh service
      service:
        name: sshd
        state: restarted
      ignore_errors: "yes"

- hosts: all
  gather_facts: no
  tasks:
    - name: Set new ssh port
      set_fact:
        ansible_port: 2222

- hosts: localhost
  gather_facts: no
  tasks:
    - name: Wait for instances to respond
      wait_for:
        host: "{{ item }}"
        port: 2222
      loop: "{{ groups['all'] }}"

# - hosts: localhost
#   gather_facts: no
#   vars:
#     test: true
#     gcp_region: us-east1
#     gcp_zone: us-east1-b
#     gcp_project: true-entropy-221110
#     gcp_cred_kind: serviceaccount
#     gcp_cred_file: ../credentials.json
#     source_image: projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20181030
#   roles:
#   #create load balancer
#     - role: gcp-load-balancer

- hosts: monitor
  become: yes
  roles:
    - { role: monitor }

- hosts: db-*
  become: yes
  roles:
    - {
      role: db-install,
      pg_version: '9.5',
      bucardo_version: '5.5.0',
      listen: '*',
      pg_password: 'password',
      floating_ip: '10.10.10.10',
      zone: us-east1-b
      }
    - { role: beats, type: db }

- hosts: redis-master
  become: yes
  roles:
    - { role: redis, type: master }
    - { role: beats, type: redis }

- hosts: redis-slave
  become: yes
  roles:
    - { role: redis, type: slave }
    - { role: beats, type: redis }

- hosts: localhost
  roles:
    - { role: gitlab-conf, local: true, database: '10.10.10.10' }
    - { role: gitaly, local: true}

- hosts: app
  roles:
    - { role: gitlab-conf, local: false }

- hosts: gitaly
  become: yes
  roles:
    - { role: gitaly, local: false }
    - { role: beats, type: none }

- hosts: app
  become: yes
  roles:
    - { role: app }
    - { role: beats, type: app }

- hosts: tests
  become: yes
  roles:
    -  role: tests 
       when: test

